// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UV2_ZO_G_V2_1__ZapOut2PairTokenResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class UV2_ZO_G_V2_1__ZapOut2PairTokenWithPermitResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class UV2_ZO_G_V2_1 extends ethereum.SmartContract {
  static bind(address: Address): UV2_ZO_G_V2_1 {
    return new UV2_ZO_G_V2_1("UV2_ZO_G_V2_1", address);
  }

  ZapOut(
    _ToTokenContractAddress: Address,
    _FromUniPoolAddress: Address,
    _IncomingLP: BigInt,
    _minTokensRec: BigInt
  ): BigInt {
    let result = super.call(
      "ZapOut",
      "ZapOut(address,address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_ToTokenContractAddress),
        ethereum.Value.fromAddress(_FromUniPoolAddress),
        ethereum.Value.fromUnsignedBigInt(_IncomingLP),
        ethereum.Value.fromUnsignedBigInt(_minTokensRec)
      ]
    );

    return result[0].toBigInt();
  }

  try_ZapOut(
    _ToTokenContractAddress: Address,
    _FromUniPoolAddress: Address,
    _IncomingLP: BigInt,
    _minTokensRec: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ZapOut",
      "ZapOut(address,address,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_ToTokenContractAddress),
        ethereum.Value.fromAddress(_FromUniPoolAddress),
        ethereum.Value.fromUnsignedBigInt(_IncomingLP),
        ethereum.Value.fromUnsignedBigInt(_minTokensRec)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ZapOut2PairToken(
    _FromUniPoolAddress: Address,
    _IncomingLP: BigInt
  ): UV2_ZO_G_V2_1__ZapOut2PairTokenResult {
    let result = super.call(
      "ZapOut2PairToken",
      "ZapOut2PairToken(address,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(_FromUniPoolAddress),
        ethereum.Value.fromUnsignedBigInt(_IncomingLP)
      ]
    );

    return new UV2_ZO_G_V2_1__ZapOut2PairTokenResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_ZapOut2PairToken(
    _FromUniPoolAddress: Address,
    _IncomingLP: BigInt
  ): ethereum.CallResult<UV2_ZO_G_V2_1__ZapOut2PairTokenResult> {
    let result = super.tryCall(
      "ZapOut2PairToken",
      "ZapOut2PairToken(address,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(_FromUniPoolAddress),
        ethereum.Value.fromUnsignedBigInt(_IncomingLP)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new UV2_ZO_G_V2_1__ZapOut2PairTokenResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  ZapOut2PairTokenWithPermit(
    _FromUniPoolAddress: Address,
    _IncomingLP: BigInt,
    _approvalAmount: BigInt,
    _deadline: BigInt,
    v: i32,
    r: Bytes,
    s: Bytes
  ): UV2_ZO_G_V2_1__ZapOut2PairTokenWithPermitResult {
    let result = super.call(
      "ZapOut2PairTokenWithPermit",
      "ZapOut2PairTokenWithPermit(address,uint256,uint256,uint256,uint8,bytes32,bytes32):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(_FromUniPoolAddress),
        ethereum.Value.fromUnsignedBigInt(_IncomingLP),
        ethereum.Value.fromUnsignedBigInt(_approvalAmount),
        ethereum.Value.fromUnsignedBigInt(_deadline),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(v)),
        ethereum.Value.fromFixedBytes(r),
        ethereum.Value.fromFixedBytes(s)
      ]
    );

    return new UV2_ZO_G_V2_1__ZapOut2PairTokenWithPermitResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_ZapOut2PairTokenWithPermit(
    _FromUniPoolAddress: Address,
    _IncomingLP: BigInt,
    _approvalAmount: BigInt,
    _deadline: BigInt,
    v: i32,
    r: Bytes,
    s: Bytes
  ): ethereum.CallResult<UV2_ZO_G_V2_1__ZapOut2PairTokenWithPermitResult> {
    let result = super.tryCall(
      "ZapOut2PairTokenWithPermit",
      "ZapOut2PairTokenWithPermit(address,uint256,uint256,uint256,uint8,bytes32,bytes32):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(_FromUniPoolAddress),
        ethereum.Value.fromUnsignedBigInt(_IncomingLP),
        ethereum.Value.fromUnsignedBigInt(_approvalAmount),
        ethereum.Value.fromUnsignedBigInt(_deadline),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(v)),
        ethereum.Value.fromFixedBytes(r),
        ethereum.Value.fromFixedBytes(s)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new UV2_ZO_G_V2_1__ZapOut2PairTokenWithPermitResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  ZapOutWithPermit(
    _ToTokenContractAddress: Address,
    _FromUniPoolAddress: Address,
    _IncomingLP: BigInt,
    _minTokensRec: BigInt,
    _approvalAmount: BigInt,
    _deadline: BigInt,
    v: i32,
    r: Bytes,
    s: Bytes
  ): BigInt {
    let result = super.call(
      "ZapOutWithPermit",
      "ZapOutWithPermit(address,address,uint256,uint256,uint256,uint256,uint8,bytes32,bytes32):(uint256)",
      [
        ethereum.Value.fromAddress(_ToTokenContractAddress),
        ethereum.Value.fromAddress(_FromUniPoolAddress),
        ethereum.Value.fromUnsignedBigInt(_IncomingLP),
        ethereum.Value.fromUnsignedBigInt(_minTokensRec),
        ethereum.Value.fromUnsignedBigInt(_approvalAmount),
        ethereum.Value.fromUnsignedBigInt(_deadline),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(v)),
        ethereum.Value.fromFixedBytes(r),
        ethereum.Value.fromFixedBytes(s)
      ]
    );

    return result[0].toBigInt();
  }

  try_ZapOutWithPermit(
    _ToTokenContractAddress: Address,
    _FromUniPoolAddress: Address,
    _IncomingLP: BigInt,
    _minTokensRec: BigInt,
    _approvalAmount: BigInt,
    _deadline: BigInt,
    v: i32,
    r: Bytes,
    s: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ZapOutWithPermit",
      "ZapOutWithPermit(address,address,uint256,uint256,uint256,uint256,uint8,bytes32,bytes32):(uint256)",
      [
        ethereum.Value.fromAddress(_ToTokenContractAddress),
        ethereum.Value.fromAddress(_FromUniPoolAddress),
        ethereum.Value.fromUnsignedBigInt(_IncomingLP),
        ethereum.Value.fromUnsignedBigInt(_minTokensRec),
        ethereum.Value.fromUnsignedBigInt(_approvalAmount),
        ethereum.Value.fromUnsignedBigInt(_deadline),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(v)),
        ethereum.Value.fromFixedBytes(r),
        ethereum.Value.fromFixedBytes(s)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  canSwapFromV2(_fromToken: Address, _toToken: Address): boolean {
    let result = super.call(
      "canSwapFromV2",
      "canSwapFromV2(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_fromToken),
        ethereum.Value.fromAddress(_toToken)
      ]
    );

    return result[0].toBoolean();
  }

  try_canSwapFromV2(
    _fromToken: Address,
    _toToken: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canSwapFromV2",
      "canSwapFromV2(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_fromToken),
        ethereum.Value.fromAddress(_toToken)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  goodwill(): i32 {
    let result = super.call("goodwill", "goodwill():(uint16)", []);

    return result[0].toI32();
  }

  try_goodwill(): ethereum.CallResult<i32> {
    let result = super.tryCall("goodwill", "goodwill():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  isOwner(): boolean {
    let result = super.call("isOwner", "isOwner():(bool)", []);

    return result[0].toBoolean();
  }

  try_isOwner(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOwner", "isOwner():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  stopped(): boolean {
    let result = super.call("stopped", "stopped():(bool)", []);

    return result[0].toBoolean();
  }

  try_stopped(): ethereum.CallResult<boolean> {
    let result = super.tryCall("stopped", "stopped():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _goodwill(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class ZapOutCall extends ethereum.Call {
  get inputs(): ZapOutCall__Inputs {
    return new ZapOutCall__Inputs(this);
  }

  get outputs(): ZapOutCall__Outputs {
    return new ZapOutCall__Outputs(this);
  }
}

export class ZapOutCall__Inputs {
  _call: ZapOutCall;

  constructor(call: ZapOutCall) {
    this._call = call;
  }

  get _ToTokenContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _FromUniPoolAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _IncomingLP(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _minTokensRec(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ZapOutCall__Outputs {
  _call: ZapOutCall;

  constructor(call: ZapOutCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ZapOut2PairTokenCall extends ethereum.Call {
  get inputs(): ZapOut2PairTokenCall__Inputs {
    return new ZapOut2PairTokenCall__Inputs(this);
  }

  get outputs(): ZapOut2PairTokenCall__Outputs {
    return new ZapOut2PairTokenCall__Outputs(this);
  }
}

export class ZapOut2PairTokenCall__Inputs {
  _call: ZapOut2PairTokenCall;

  constructor(call: ZapOut2PairTokenCall) {
    this._call = call;
  }

  get _FromUniPoolAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _IncomingLP(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ZapOut2PairTokenCall__Outputs {
  _call: ZapOut2PairTokenCall;

  constructor(call: ZapOut2PairTokenCall) {
    this._call = call;
  }

  get amountA(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get amountB(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class ZapOut2PairTokenWithPermitCall extends ethereum.Call {
  get inputs(): ZapOut2PairTokenWithPermitCall__Inputs {
    return new ZapOut2PairTokenWithPermitCall__Inputs(this);
  }

  get outputs(): ZapOut2PairTokenWithPermitCall__Outputs {
    return new ZapOut2PairTokenWithPermitCall__Outputs(this);
  }
}

export class ZapOut2PairTokenWithPermitCall__Inputs {
  _call: ZapOut2PairTokenWithPermitCall;

  constructor(call: ZapOut2PairTokenWithPermitCall) {
    this._call = call;
  }

  get _FromUniPoolAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _IncomingLP(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _approvalAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class ZapOut2PairTokenWithPermitCall__Outputs {
  _call: ZapOut2PairTokenWithPermitCall;

  constructor(call: ZapOut2PairTokenWithPermitCall) {
    this._call = call;
  }

  get amountA(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get amountB(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class ZapOutWithPermitCall extends ethereum.Call {
  get inputs(): ZapOutWithPermitCall__Inputs {
    return new ZapOutWithPermitCall__Inputs(this);
  }

  get outputs(): ZapOutWithPermitCall__Outputs {
    return new ZapOutWithPermitCall__Outputs(this);
  }
}

export class ZapOutWithPermitCall__Inputs {
  _call: ZapOutWithPermitCall;

  constructor(call: ZapOutWithPermitCall) {
    this._call = call;
  }

  get _ToTokenContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _FromUniPoolAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _IncomingLP(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _minTokensRec(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _approvalAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[6].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }
}

export class ZapOutWithPermitCall__Outputs {
  _call: ZapOutWithPermitCall;

  constructor(call: ZapOutWithPermitCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class InCaseTokengetsStuckCall extends ethereum.Call {
  get inputs(): InCaseTokengetsStuckCall__Inputs {
    return new InCaseTokengetsStuckCall__Inputs(this);
  }

  get outputs(): InCaseTokengetsStuckCall__Outputs {
    return new InCaseTokengetsStuckCall__Outputs(this);
  }
}

export class InCaseTokengetsStuckCall__Inputs {
  _call: InCaseTokengetsStuckCall;

  constructor(call: InCaseTokengetsStuckCall) {
    this._call = call;
  }

  get _TokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InCaseTokengetsStuckCall__Outputs {
  _call: InCaseTokengetsStuckCall;

  constructor(call: InCaseTokengetsStuckCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetnewgoodwillCall extends ethereum.Call {
  get inputs(): SetnewgoodwillCall__Inputs {
    return new SetnewgoodwillCall__Inputs(this);
  }

  get outputs(): SetnewgoodwillCall__Outputs {
    return new SetnewgoodwillCall__Outputs(this);
  }
}

export class SetnewgoodwillCall__Inputs {
  _call: SetnewgoodwillCall;

  constructor(call: SetnewgoodwillCall) {
    this._call = call;
  }

  get _new_goodwill(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetnewgoodwillCall__Outputs {
  _call: SetnewgoodwillCall;

  constructor(call: SetnewgoodwillCall) {
    this._call = call;
  }
}

export class ToggleContractActiveCall extends ethereum.Call {
  get inputs(): ToggleContractActiveCall__Inputs {
    return new ToggleContractActiveCall__Inputs(this);
  }

  get outputs(): ToggleContractActiveCall__Outputs {
    return new ToggleContractActiveCall__Outputs(this);
  }
}

export class ToggleContractActiveCall__Inputs {
  _call: ToggleContractActiveCall;

  constructor(call: ToggleContractActiveCall) {
    this._call = call;
  }
}

export class ToggleContractActiveCall__Outputs {
  _call: ToggleContractActiveCall;

  constructor(call: ToggleContractActiveCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
